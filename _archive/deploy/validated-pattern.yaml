---
apiVersion: v1
kind: Namespace
metadata:
  name: validated-pattern---
apiVersion: v1
data:
  ovirt.id_rsa: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFNd0FBQUF0emMyZ3RaVwpReU5UVXhPUUFBQUNCNGt3ZUhKRnJWZzhDQ1EwancwWVcxRkp0c05sdUVBa2RYeStVcHUxVm9JQUFBQUpqWTBaRGgyTkdRCjRRQUFBQXR6YzJndFpXUXlOVFV4T1FBQUFDQjRrd2VISkZyVmc4Q0NRMGp3MFlXMUZKdHNObHVFQWtkWHkrVXB1MVZvSUEKQUFBRUJ0OUVjazU0dHV2RXpjWTJ2VGgxMUdjS1A5SkNvQUorVzU2U1BkekM2SFgzaVRCNGNrV3RXRHdJSkRTUERSaGJVVQptMncyVzRRQ1IxZkw1U203VldnZ0FBQUFEM0p2YjNSQWNtVjBkR1Z1TFcxaFl3RUNBd1FGQmc9PQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: id-rsa
  namespace: validated-pattern
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: install-scripts
  namespace: validated-pattern
data:
  rhel8.sh: |-
    subscription-manager register --activationkey rhel8-gha-virt-validated-pattern --org 11009103
    subscription-manager attach --auto
    cat << EOF > /etc/yum.repos.d/baseos.repo
    [rhel-8-for-x86_64-baseos-rpms]
    name = Red Hat Enterprise Linux 8 for x86_64 - BaseOS (RPMs)
    baseurl = https://cdn.redhat.com/content/dist/rhel8/$releasever/x86_64/baseos/os
    enabled = 1
    gpgcheck = 1
    gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
    sslverify = 1
    sslcacert = /etc/rhsm/ca/redhat-uep.pem
    sslclientkey = /etc/pki/entitlement/6604706093297038311-key.pem
    sslclientcert = /etc/pki/entitlement/6604706093297038311.pem
    metadata_expire = 86400
    enable_metadata = 1
    ui_repoid_vars = releasever
    EOF
    cat << EOF > /etc/yum.repos.d/appstream.repo 
    [rhel-8-for-x86_64-appstream-rpms]
    name = Red Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)
    baseurl = https://cdn.redhat.com/content/dist/rhel8/$releasever/x86_64/appstream/os
    enabled = 1
    gpgcheck = 1
    gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
    sslverify = 1
    sslcacert = /etc/rhsm/ca/redhat-uep.pem
    sslclientkey = /etc/pki/entitlement/6604706093297038311-key.pem
    sslclientcert = /etc/pki/entitlement/6604706093297038311.pem
    metadata_expire = 86400
    enable_metadata = 1
    ui_repoid_vars = releasever
    EOF
    # Create a folder
    $ mkdir actions-runner && cd actions-runner
    # Download the latest runner package
    $ curl -o actions-runner-osx-arm64-2.317.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-osx-arm64-2.317.0.tar.gz
    # Optional: Validate the hash
    $ echo "70b765f32062de395a35676579e25ab433270d7367feb8da85dcfe42560feaba  actions-runner-osx-arm64-2.317.0.tar.gz" | shasum -a 256 -c
    # Extract the installer
    $ tar xzf ./actions-runner-osx-arm64-2.317.0.tar.gz
    # Create the runner and start the configuration experience
    export RUNNER_ALLOW_RUNASROOT="1"
    RUNNER_ALLOW_RUNASROOT="1" ./config.sh --url https://github.com/redhatryan/podman-actions --token AYKPCAGDQGAFT2N3E5NLYC3GPSPLS
    # Last step, run it!
    ./run.sh
immutable: false
------
apiVersion: v1
kind: ConfigMap
metadata:
  name: ubi8-install
  namespace: validated-pattern
data:
  install.sh: |-
    mkdir /root/.ssh/
    cp /mnt/demo.id_rsa /root/.ssh/id_rsa
    chmod 700 /root/.ssh/
    chmod 0400 /root/.ssh/id_rsa
    yum install -y openssh-clients rsync
    /bin/sh
immutable: false
---
apiVersion: v1
kind: Pod
metadata:
  name: ubi8
  labels:
    app: ubi8
    app.kubernetes.io/part-of: utility
    app.openshift.io/runtime: redhat
    app.openshift.io/name: utility
  namespace: validated-pattern
spec:
  volumes:
    - configMap:
        name: ubi8-install
      name: ubi8-install
    - secret:
        secretName: id-rsa
      name: id-rsa
  containers:
    - name: ubi8
      image: 'registry.access.redhat.com/ubi8/ubi'
      command: ["/bin/sh"]
      args: ["/usr/local/bin/install.sh"]
      stdin: true
      tty: true
      volumeMounts:
        - name: ubi8-install
          readOnly: true
          mountPath: /usr/local/bin/install.sh
          subPath: install.sh
        - name: id-rsa
          readOnly: true
          mountPath: /mnt/
------
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: rhel8-vp
  namespace: validated-pattern
  labels:
    app: rhel8-vp
    vm.kubevirt.io/template: rhel8-server-small
    vm.kubevirt.io/template.namespace: openshift
    vm.kubevirt.io/template.revision: '1'
    vm.kubevirt.io/template.version: v0.27.0
spec:
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        creationTimestamp: null
        name: rhel8-vp
      spec:
        sourceRef:
          kind: DataSource
          name: rhel8
          namespace: openshift-virtualization-os-images
        storage:
          resources:
            requests:
              storage: 50Gi
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/flavor: small
        vm.kubevirt.io/os: rhel8
        vm.kubevirt.io/workload: server
      creationTimestamp: null
      labels:
        kubevirt.io/domain: rhel8-vp
        kubevirt.io/size: small
    spec:
      architecture: amd64
      domain:
        cpu:
          cores: 2
          sockets: 1
          threads: 1
        devices:
          disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            - disk:
                bus: virtio
              name: install-scripts
              serial: 0000sh
          interfaces:
            - macAddress: '02:85:c4:00:00:01'
              masquerade: {}
              model: virtio
              name: default
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel9.2.0
        memory:
          guest: 8Gi
        resources: {}
      networks:
        - name: default
          pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
        - dataVolume:
            name: rhel8-vp
          name: rootdisk
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              hostname: lab
              runcmd: 
                - sudo mount /dev/disk/by-id/virtio-0000sh /mnt/
                - bash /mnt/rhel8.sh
                - umount /mnt
              users:
              - name: root
                lock_passwd: false
                password: redhat
              - name: redhat
                password: redhat
                chpasswd: { expire: False }
              ssh_authorized_keys:
               - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHiTB4ckWtWDwIJDSPDRhbUUm2w2W4QCR1fL5Sm7VWgg root@retten-mac
          name: cloudinitdisk
        - configMap:
            name: install-scripts
          name: install-scripts